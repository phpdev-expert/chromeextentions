{"ast":null,"code":"import _regeneratorRuntime from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/home/dh/Desktop/react-chrome-secureshare/src/pages/SecureSharePage.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Textarea, Flex, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, useBreakpointValue, Stack, Text, useDisclosure, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Button, useToast, Box, Heading, FormControl, FormLabel, FormHelperText } from '@chakra-ui/react';\nimport { Formik, Form } from 'formik';\nimport CryptoJS from 'crypto-js';\nimport { gql } from 'graphql-request';\nimport { useMutation } from 'react-query';\nimport { nanoid } from 'nanoid';\nimport { endOfDay, startOfDay, subDays, format } from 'date-fns'; // import { format as zonedFormat, utcToZonedTime } from 'date-fns-tz';\n\nimport { DateRangePicker, DateRange } from 'react-date-range';\nimport ClipInput from '../components/ClipInput';\nimport UploadFile from '../api/uploadfile';\nimport { useAuth } from '../components/auth';\nimport UploadBox from '../components/UploadBox';\nimport { request } from '../api/graphql_api';\nvar createShareMut = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation MyMutation(\\n    $accountId: String = \\\"\\\"\\n    $clickAllowed: Int = 10\\n    $endDate: String = \\\"\\\"\\n    $fileNames: [String]!\\n    $startDate: String = \\\"\\\"\\n    $encryptedData: String = \\\"\\\"\\n    $username: String = \\\"\\\"\\n  ) {\\n    v1_secureshare_SecureShare_Create(\\n      input: {\\n        accountId: $accountId\\n        clickAllowed: $clickAllowed\\n        endDate: $endDate\\n        fileNames: $fileNames\\n        startDate: $startDate\\n        encryptedData: $encryptedData\\n        username: $username\\n      }\\n    ) {\\n      files {\\n        name\\n        url\\n      }\\n      uuid\\n    }\\n  }\\n\"])));\n\nvar SecureSharePage = function SecureSharePage() {\n  // const date = new Date();\n  alert(useAuth().useMemo());\n  console.log(useAuth().useMemo());\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      cliplink = _useState2[0],\n      setCliplink = _useState2[1];\n\n  var baseDate = new Date();\n  var toast = useToast();\n\n  var _useState3 = useState([{\n    startDate: startOfDay(subDays(baseDate, 15)),\n    endDate: endOfDay(baseDate),\n    key: 'selection'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      range = _useState4[0],\n      setRange = _useState4[1];\n\n  var popM = useDisclosure();\n  var popsize = useBreakpointValue({\n    base: null,\n    lg: 'auto'\n  });\n  var displayMobile = useBreakpointValue({\n    base: true,\n    lg: false\n  });\n  var displayDesktop = useBreakpointValue({\n    base: false,\n    lg: true\n  }); // const formatedData = graphData?.map((v) => {\n  //   const datez = new Date(v.time);\n  //   const timeZone = 'Europe/Berlin';\n  //   const zonedDate = utcToZonedTime(datez, timeZone);\n  //   return {\n  //     count: v.count,\n  //     time: zonedFormat(zonedDate, 'MM/dd/yyyy', {\n  //       timeZone: 'UTC',\n  //     }),\n  //   };\n  // });\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      genKey = _useState6[0],\n      setgenKey = _useState6[1];\n\n  useEffect(function () {\n    setgenKey(nanoid());\n    return function () {};\n  }, []);\n  var createShareMutation = useMutation(function (input) {\n    return request(createShareMut, input);\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    flex: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    color: \"green.800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"SecureShare\"), /*#__PURE__*/React.createElement(Text, {\n    color: \"gray.700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Share your data securely\")), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      data: '',\n      files: [],\n      clickAllowed: 12\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref) {\n        var resetForm, _range$, _range$$endDate, _range$2, _range$2$startDate, _data$secureshare_Sec, _window, _window$location, _data$secureshare_Sec2, encrypted, filen, data, fileToUpload, _e$response, _e$response$errors$;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                resetForm = _ref.resetForm;\n                alert(user);\n                _context2.prev = 2;\n                encrypted = CryptoJS.AES.encrypt(values.data, genKey).toString();\n                filen = values.files.map(function (v) {\n                  return v.name;\n                });\n                _context2.next = 7;\n                return createShareMutation.mutateAsync({\n                  accountId: user.accountId,\n                  clickAllowed: values.clickAllowed,\n                  endDate: (_range$ = range[0]) === null || _range$ === void 0 ? void 0 : (_range$$endDate = _range$.endDate) === null || _range$$endDate === void 0 ? void 0 : _range$$endDate.toISOString(),\n                  startDate: (_range$2 = range[0]) === null || _range$2 === void 0 ? void 0 : (_range$2$startDate = _range$2.startDate) === null || _range$2$startDate === void 0 ? void 0 : _range$2$startDate.toISOString(),\n                  username: user.username,\n                  encryptedData: encrypted,\n                  fileNames: filen\n                });\n\n              case 7:\n                data = _context2.sent;\n                fileToUpload = data === null || data === void 0 ? void 0 : (_data$secureshare_Sec = data.secureshare_SecureShare_Create) === null || _data$secureshare_Sec === void 0 ? void 0 : _data$secureshare_Sec.files;\n\n                if (!fileToUpload) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 12;\n                return Promise.all(fileToUpload.map( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(f) {\n                    var val;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            val = values.files.filter(function (v) {\n                              return f.name === v.name;\n                            });\n                            _context.next = 3;\n                            return UploadFile(f.url, val[0], null);\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 12:\n                setCliplink(\"http://\".concat((_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.host, \"/app/secure/\").concat(data === null || data === void 0 ? void 0 : (_data$secureshare_Sec2 = data.secureshare_SecureShare_Create) === null || _data$secureshare_Sec2 === void 0 ? void 0 : _data$secureshare_Sec2.uuid, \"/\").concat(genKey));\n                toast({\n                  title: 'File encrypted',\n                  description: 'Files Added',\n                  status: 'success',\n                  duration: 3000,\n                  isClosable: true,\n                  position: 'top'\n                });\n                _context2.next = 22;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                if (!_context2.t0.response) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                toast({\n                  title: 'Response Error',\n                  description: _context2.t0 === null || _context2.t0 === void 0 ? void 0 : (_e$response = _context2.t0.response) === null || _e$response === void 0 ? void 0 : (_e$response$errors$ = _e$response.errors[0]) === null || _e$response$errors$ === void 0 ? void 0 : _e$response$errors$.message,\n                  status: 'error',\n                  duration: 4000,\n                  isClosable: true,\n                  position: 'top'\n                });\n                return _context2.abrupt(\"return\");\n\n              case 21:\n                toast({\n                  title: 'Application Error',\n                  description: _context2.t0.message,\n                  status: 'error',\n                  duration: 4000,\n                  isClosable: true,\n                  position: 'top'\n                });\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 16]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var values = _ref4.values,\n        isSubmitting = _ref4.isSubmitting,\n        setFieldValue = _ref4.setFieldValue,\n        handleChange = _ref4.handleChange;\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: \"md\",\n      mb: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"Encrypt a message\"), /*#__PURE__*/React.createElement(Textarea, {\n      required: true,\n      name: \"data\",\n      value: values.data,\n      placeholder: \"Place a message to encrypt here\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Stack, {\n      mt: 4,\n      flexDirection: {\n        base: 'column',\n        md: 'row'\n      },\n      justifyContent: \"space-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      maxWidth: 300,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"Select Access Date Range\"), /*#__PURE__*/React.createElement(Stack, {\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      matchWidth: true,\n      placement: \"bottom-end\",\n      isOpen: popM.isOpen,\n      onClose: popM.onClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PopoverTrigger, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      flexDirection: {\n        base: 'row',\n        lg: 'row'\n      },\n      tabIndex: \"0\",\n      role: \"button\",\n      \"aria-label\": \"Date Range\",\n      p: 2,\n      borderWidth: 2,\n      borderRadius: \"lg\",\n      onClick: popM.onOpen,\n      variant: \"outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      mr: 2,\n      color: \"green.800\",\n      fontWeight: \"bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, format(range[0].startDate, 'MM/dd/yyyy')), /*#__PURE__*/React.createElement(Text, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, \"to\"), /*#__PURE__*/React.createElement(Text, {\n      color: \"green.800\",\n      fontWeight: \"bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, format(range[0].endDate, 'MM/dd/yyyy')))), /*#__PURE__*/React.createElement(PopoverContent, {\n      width: popsize,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PopoverArrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PopoverCloseButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }, \"Date Range\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, displayMobile && /*#__PURE__*/React.createElement(DateRange, {\n      editableDateInputs: true,\n      onChange: function onChange(item) {\n        item.selection.startDate = startOfDay(item.selection.startDate);\n        item.selection.endDate = endOfDay(item.selection.endDate);\n        setRange([item.selection]);\n      },\n      moveRangeOnFirstSelection: false,\n      ranges: range,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 27\n      }\n    }), displayDesktop && /*#__PURE__*/React.createElement(DateRangePicker, {\n      editableDateInputs: true,\n      onChange: function onChange(item) {\n        item.selection.startDate = startOfDay(item.selection.startDate);\n        item.selection.endDate = endOfDay(item.selection.endDate);\n        setRange([item.selection]);\n      },\n      showSelectionPreview: true,\n      moveRangeOnFirstSelection: false,\n      months: 1,\n      ranges: range,\n      direction: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(PopoverFooter, {\n      d: \"flex\",\n      justifyContent: \"flex-end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      colorScheme: \"blue\",\n      onClick: function onClick() {\n        popM.onClose(); // analytics.refetch();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Apply\"))))), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, \"Choose when you want message to be accessed\")), /*#__PURE__*/React.createElement(FormControl, {\n      maxWidth: 300,\n      ml: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \"Allowed Opens\"), /*#__PURE__*/React.createElement(NumberInput, {\n      min: 1,\n      required: true,\n      onChange: function onChange(s, n) {\n        setFieldValue('clickAllowed', n);\n      },\n      value: values.clickAllowed,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NumberInputField, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(NumberInputStepper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NumberIncrementStepper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(NumberDecrementStepper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, \"The amount of time the message can be accessed\"))), /*#__PURE__*/React.createElement(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UploadBox, {\n      name: \"files\",\n      setFieldValue: setFieldValue,\n      values: values,\n      encryptionKey: genKey,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }), cliplink && /*#__PURE__*/React.createElement(ClipInput, {\n      value: cliplink,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Flex, {\n      justifyContent: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      colorScheme: \"blue\",\n      mr: 3,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, \"Encrypt\"))));\n  }));\n};\n\nexport default SecureSharePage; // {JSON.stringify(values)}\n// {`start : ${range[0]?.startDate?.toISOString()}`}\n// {`end : ${range[0]?.endDate?.toISOString()}`}","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/pages/SecureSharePage.jsx"],"names":["React","useState","useEffect","Textarea","Flex","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","useBreakpointValue","Stack","Text","useDisclosure","Popover","PopoverTrigger","PopoverContent","PopoverHeader","PopoverBody","PopoverArrow","PopoverCloseButton","PopoverFooter","Button","useToast","Box","Heading","FormControl","FormLabel","FormHelperText","Formik","Form","CryptoJS","gql","useMutation","nanoid","endOfDay","startOfDay","subDays","format","DateRangePicker","DateRange","ClipInput","UploadFile","useAuth","UploadBox","request","createShareMut","SecureSharePage","alert","useMemo","console","log","user","cliplink","setCliplink","baseDate","Date","toast","startDate","endDate","key","range","setRange","popM","popsize","base","lg","displayMobile","displayDesktop","genKey","setgenKey","createShareMutation","input","data","files","clickAllowed","values","resetForm","encrypted","AES","encrypt","toString","filen","map","v","name","mutateAsync","accountId","toISOString","username","encryptedData","fileNames","fileToUpload","secureshare_SecureShare_Create","Promise","all","f","val","filter","url","window","location","host","uuid","title","description","status","duration","isClosable","position","response","errors","message","isSubmitting","setFieldValue","handleChange","width","md","isOpen","onClose","onOpen","item","selection","s","n"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Textarea,\n  Flex,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  useBreakpointValue,\n  Stack,\n  Text,\n  useDisclosure,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverFooter,\n  Button,\n  useToast,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n} from '@chakra-ui/react';\nimport { Formik, Form } from 'formik';\nimport CryptoJS from 'crypto-js';\nimport { gql } from 'graphql-request';\nimport { useMutation } from 'react-query';\n\nimport { nanoid } from 'nanoid';\nimport { endOfDay, startOfDay, subDays, format } from 'date-fns';\n// import { format as zonedFormat, utcToZonedTime } from 'date-fns-tz';\nimport { DateRangePicker, DateRange } from 'react-date-range';\nimport ClipInput from '../components/ClipInput';\nimport UploadFile from '../api/uploadfile';\nimport { useAuth } from '../components/auth';\nimport UploadBox from '../components/UploadBox';\nimport { request } from '../api/graphql_api';\n\nconst createShareMut = gql`\n  mutation MyMutation(\n    $accountId: String = \"\"\n    $clickAllowed: Int = 10\n    $endDate: String = \"\"\n    $fileNames: [String]!\n    $startDate: String = \"\"\n    $encryptedData: String = \"\"\n    $username: String = \"\"\n  ) {\n    v1_secureshare_SecureShare_Create(\n      input: {\n        accountId: $accountId\n        clickAllowed: $clickAllowed\n        endDate: $endDate\n        fileNames: $fileNames\n        startDate: $startDate\n        encryptedData: $encryptedData\n        username: $username\n      }\n    ) {\n      files {\n        name\n        url\n      }\n      uuid\n    }\n  }\n`;\n\nconst SecureSharePage = () => {\n  // const date = new Date();\n  alert(useAuth().useMemo())\n  console.log(useAuth().useMemo())\n  const { user } = useAuth();\n  const [cliplink, setCliplink] = useState('');\n\n  const baseDate = new Date();\n  const toast = useToast();\n  const [range, setRange] = useState([\n    {\n      startDate: startOfDay(subDays(baseDate, 15)),\n      endDate: endOfDay(baseDate),\n      key: 'selection',\n    },\n  ]);\n  const popM = useDisclosure();\n\n  const popsize = useBreakpointValue({ base: null, lg: 'auto' });\n\n  const displayMobile = useBreakpointValue({ base: true, lg: false });\n  const displayDesktop = useBreakpointValue({ base: false, lg: true });\n\n  // const formatedData = graphData?.map((v) => {\n  //   const datez = new Date(v.time);\n  //   const timeZone = 'Europe/Berlin';\n  //   const zonedDate = utcToZonedTime(datez, timeZone);\n  //   return {\n  //     count: v.count,\n  //     time: zonedFormat(zonedDate, 'MM/dd/yyyy', {\n  //       timeZone: 'UTC',\n  //     }),\n  //   };\n  // });\n\n  const [genKey, setgenKey] = useState('');\n\n  useEffect(() => {\n    setgenKey(nanoid());\n    return () => {};\n  }, []);\n\n  const createShareMutation = useMutation((input) =>\n    request(createShareMut, input),\n  );\n\n  return (\n    <Box flex={1}>\n      <Box mb={10}>\n        <Heading color=\"green.800\">SecureShare</Heading>\n        <Text color=\"gray.700\">Share your data securely</Text>\n      </Box>\n\n      <Formik\n        enableReinitialize\n        initialValues={{\n          data: '',\n          files: [],\n          clickAllowed: 12,\n        }}\n        onSubmit={async (values, { resetForm }) => {\n          alert(user)\n          try {\n            const encrypted = CryptoJS.AES.encrypt(\n              values.data,\n              genKey,\n            ).toString();\n\n            const filen = values.files.map((v) => v.name);\n\n            const data = await createShareMutation.mutateAsync({\n              accountId: user.accountId,\n              clickAllowed: values.clickAllowed,\n              endDate: range[0]?.endDate?.toISOString(),\n              startDate: range[0]?.startDate?.toISOString(),\n              username: user.username,\n              encryptedData: encrypted,\n              fileNames: filen,\n            });\n\n            const fileToUpload = data?.secureshare_SecureShare_Create?.files;\n\n            if (fileToUpload) {\n              await Promise.all(\n                fileToUpload.map(async (f) => {\n                  const val = values.files.filter((v) => f.name === v.name);\n\n                  await UploadFile(f.url, val[0], null);\n                }),\n              );\n            }\n\n            setCliplink(\n              `http://${window?.location?.host}/app/secure/${data?.secureshare_SecureShare_Create?.uuid}/${genKey}`,\n            );\n\n            toast({\n              title: 'File encrypted',\n              description: 'Files Added',\n              status: 'success',\n              duration: 3000,\n              isClosable: true,\n              position: 'top',\n            });\n          } catch (e) {\n            if (e.response) {\n              toast({\n                title: 'Response Error',\n                description: e?.response?.errors[0]?.message,\n                status: 'error',\n                duration: 4000,\n                isClosable: true,\n                position: 'top',\n              });\n\n              return;\n            }\n\n            toast({\n              title: 'Application Error',\n              description: e.message,\n              status: 'error',\n              duration: 4000,\n              isClosable: true,\n              position: 'top',\n            });\n          }\n        }}\n      >\n        {({ values, isSubmitting, setFieldValue, handleChange }) => (\n          <Form style={{ width: '100%' }}>\n            <Heading size=\"md\" mb={4}>\n              Encrypt a message\n            </Heading>\n            <Textarea\n              required\n              name=\"data\"\n              value={values.data}\n              placeholder=\"Place a message to encrypt here\"\n              onChange={handleChange}\n            />\n\n            <Stack\n              mt={4}\n              flexDirection={{ base: 'column', md: 'row' }}\n              justifyContent=\"space-between\"\n            >\n              <FormControl maxWidth={300}>\n                <FormLabel>Select Access Date Range</FormLabel>\n                <Stack spacing={2}>\n                  <Popover\n                    matchWidth\n                    placement=\"bottom-end\"\n                    isOpen={popM.isOpen}\n                    onClose={popM.onClose}\n                  >\n                    <PopoverTrigger>\n                      <Flex\n                        flexDirection={{ base: 'row', lg: 'row' }}\n                        tabIndex=\"0\"\n                        role=\"button\"\n                        aria-label=\"Date Range\"\n                        p={2}\n                        borderWidth={2}\n                        borderRadius=\"lg\"\n                        onClick={popM.onOpen}\n                        variant=\"outline\"\n                      >\n                        <Text mr={2} color=\"green.800\" fontWeight=\"bold\">\n                          {format(range[0].startDate, 'MM/dd/yyyy')}\n                        </Text>\n                        <Text mr={2}>to</Text>\n                        <Text color=\"green.800\" fontWeight=\"bold\">\n                          {format(range[0].endDate, 'MM/dd/yyyy')}\n                        </Text>\n                      </Flex>\n                    </PopoverTrigger>\n                    <PopoverContent width={popsize}>\n                      <PopoverArrow />\n                      <PopoverCloseButton />\n                      <PopoverHeader>Date Range</PopoverHeader>\n                      <PopoverBody>\n                        {displayMobile && (\n                          <DateRange\n                            editableDateInputs\n                            onChange={(item) => {\n                              item.selection.startDate = startOfDay(\n                                item.selection.startDate,\n                              );\n\n                              item.selection.endDate = endOfDay(\n                                item.selection.endDate,\n                              );\n\n                              setRange([item.selection]);\n                            }}\n                            moveRangeOnFirstSelection={false}\n                            ranges={range}\n                          />\n                        )}\n                        {displayDesktop && (\n                          <DateRangePicker\n                            editableDateInputs\n                            onChange={(item) => {\n                              item.selection.startDate = startOfDay(\n                                item.selection.startDate,\n                              );\n\n                              item.selection.endDate = endOfDay(\n                                item.selection.endDate,\n                              );\n\n                              setRange([item.selection]);\n                            }}\n                            showSelectionPreview\n                            moveRangeOnFirstSelection={false}\n                            months={1}\n                            ranges={range}\n                            direction=\"horizontal\"\n                          />\n                        )}\n                      </PopoverBody>\n                      <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                        <Button\n                          colorScheme=\"blue\"\n                          onClick={() => {\n                            popM.onClose();\n                            // analytics.refetch();\n                          }}\n                        >\n                          Apply\n                        </Button>\n                      </PopoverFooter>\n                    </PopoverContent>\n                  </Popover>\n                </Stack>\n                <FormHelperText>\n                  Choose when you want message to be accessed\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl maxWidth={300} ml=\"auto\">\n                <FormLabel htmlFor=\"email\">Allowed Opens</FormLabel>\n                <NumberInput\n                  min={1}\n                  required\n                  onChange={(s, n) => {\n                    setFieldValue('clickAllowed', n);\n                  }}\n                  value={values.clickAllowed}\n                >\n                  <NumberInputField />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                  </NumberInputStepper>\n                </NumberInput>\n                <FormHelperText>\n                  The amount of time the message can be accessed\n                </FormHelperText>\n              </FormControl>\n            </Stack>\n\n            <Box mt={4}>\n              <UploadBox\n                name=\"files\"\n                setFieldValue={setFieldValue}\n                values={values}\n                encryptionKey={genKey}\n              />\n\n              {cliplink && <ClipInput value={cliplink} />}\n\n              <Flex justifyContent=\"center\">\n                <Button\n                  size=\"lg\"\n                  colorScheme=\"blue\"\n                  mr={3}\n                  type=\"submit\"\n                  isLoading={isSubmitting}\n                >\n                  Encrypt\n                </Button>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default SecureSharePage;\n\n// {JSON.stringify(values)}\n// {`start : ${range[0]?.startDate?.toISOString()}`}\n// {`end : ${range[0]?.endDate?.toISOString()}`}\n"]},"metadata":{},"sourceType":"module"}