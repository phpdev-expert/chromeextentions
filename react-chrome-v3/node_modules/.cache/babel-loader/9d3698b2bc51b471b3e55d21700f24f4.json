{"ast":null,"code":"import _regeneratorRuntime from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dh/Desktop/react-chrome-secureshare/src/components/UploadBox.jsx\";\n\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { Box, Flex, Text, Button, Stack, TagCloseButton, Tag, TagLabel, Icon } from '@chakra-ui/react';\nimport filesize from 'filesize';\nimport { Encrypt } from '../utils/filecrypt';\n\nvar UploadBox = function UploadBox(_ref) {\n  var _values$name, _values$name2, _values$name3;\n\n  var setFieldValue = _ref.setFieldValue,\n      values = _ref.values,\n      name = _ref.name,\n      _ref$encryptionKey = _ref.encryptionKey,\n      encryptionKey = _ref$encryptionKey === void 0 ? 'hello' : _ref$encryptionKey;\n\n  var _useDropzone = useDropzone({\n    onDrop: useCallback( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(acceptedFs) {\n        var fila, _iterator, _step, e, enBlob, file;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fila = _toConsumableArray(values[name]); // acceptedFs.forEach((e) => {\n                //   fila = fila.filter((f) => e.name !== f.name);\n                // });\n\n                // acceptedFs.forEach((e) => {\n                //   fila = fila.filter((f) => e.name !== f.name);\n                // });\n                _iterator = _createForOfIteratorHelper(acceptedFs);\n                _context.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 15;\n                  break;\n                }\n\n                e = _step.value;\n                console.log('accepted files');\n                console.log(e);\n                _context.next = 10;\n                return Encrypt(encryptionKey, e);\n\n              case 10:\n                enBlob = _context.sent;\n                file = new File([enBlob], e.name, {\n                  type: enBlob.type\n                });\n                fila = [].concat(_toConsumableArray(fila), [file]);\n\n              case 13:\n                _context.next = 4;\n                break;\n\n              case 15:\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n\n                _iterator.e(_context.t0);\n\n              case 20:\n                _context.prev = 20;\n\n                _iterator.f();\n\n                return _context.finish(20);\n\n              case 23:\n                // console.log('accepted', acceptedFs);\n                // console.log('fila', fila);\n                setFieldValue('files', fila);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 17, 20, 23]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [name, setFieldValue, values, encryptionKey])\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ((_values$name = values[name]) === null || _values$name === void 0 ? void 0 : _values$name.length) === 0 && /*#__PURE__*/React.createElement(Box, Object.assign({}, getRootProps(), {\n    mb: 4,\n    cursor: \"pointer\",\n    display: \"flex\",\n    minHeight: 100,\n    overflowY: \"auto\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n    p: 5,\n    borderRadius: \"lg\",\n    borderColor: \"blue.600\",\n    borderStyle: \"dashed\",\n    css: {\n      '::-webkit-scrollbar': {\n        width: '0px'\n        /* Remove scrollbar space */\n\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    as: FaCloudUploadAlt,\n    boxSize: \"3em\",\n    color: \"blue.600\",\n    mb: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    textAlign: \"center\",\n    color: \"blue.600\",\n    fontWeight: \"medium\",\n    textTransform: \"uppercase\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Click or Drag 'n' Drop Files\"))), ((_values$name2 = values[name]) === null || _values$name2 === void 0 ? void 0 : _values$name2.length) > 0 && /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4,\n    mt: 2,\n    mb: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, (_values$name3 = values[name]) === null || _values$name3 === void 0 ? void 0 : _values$name3.map(function (file) {\n    return /*#__PURE__*/React.createElement(Tag, {\n      key: file.name,\n      variant: \"outline\",\n      colorScheme: \"blue\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TagLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, file.name, \" - \", filesize(file.size)), /*#__PURE__*/React.createElement(TagCloseButton, {\n      color: \"red.800\",\n      ml: \"auto\",\n      onClick: function onClick() {\n        var _values$name4;\n\n        var fila = (_values$name4 = values[name]) === null || _values$name4 === void 0 ? void 0 : _values$name4.filter(function (f) {\n          return file.name !== f.name;\n        });\n        setFieldValue(name, fila);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    leftIcon: /*#__PURE__*/React.createElement(Icon, {\n      as: FaCloudUploadAlt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    })\n  }, getRootProps(), {\n    colorScheme: \"blue.700\",\n    variant: \"outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), \"Add More Files\"))));\n};\n\nexport default UploadBox;","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/components/UploadBox.jsx"],"names":["React","useCallback","useDropzone","FaCloudUploadAlt","Box","Flex","Text","Button","Stack","TagCloseButton","Tag","TagLabel","Icon","filesize","Encrypt","UploadBox","setFieldValue","values","name","encryptionKey","onDrop","acceptedFs","fila","e","console","log","enBlob","file","File","type","getRootProps","getInputProps","length","width","map","size","filter","f"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Stack,\n  TagCloseButton,\n  Tag,\n  TagLabel,\n  Icon,\n} from '@chakra-ui/react';\nimport filesize from 'filesize';\n\nimport { Encrypt } from '../utils/filecrypt';\n\nconst UploadBox = ({\n  setFieldValue,\n  values,\n  name,\n  encryptionKey = 'hello',\n}) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: useCallback(\n      async (acceptedFs) => {\n        let fila = [...values[name]];\n\n        // acceptedFs.forEach((e) => {\n        //   fila = fila.filter((f) => e.name !== f.name);\n        // });\n\n        for (const e of acceptedFs) {\n          console.log('accepted files');\n          console.log(e);\n          const enBlob = await Encrypt(encryptionKey, e);\n          const file = new File([enBlob], e.name, {\n            type: enBlob.type,\n          });\n\n          fila = [...fila, ...[file]];\n        }\n\n        // console.log('accepted', acceptedFs);\n\n        // console.log('fila', fila);\n        setFieldValue('files', fila);\n      },\n      [name, setFieldValue, values, encryptionKey],\n    ),\n  });\n\n  return (\n    <>\n      {values[name]?.length === 0 && (\n        <Box\n          {...getRootProps()}\n          mb={4}\n          cursor=\"pointer\"\n          display=\"flex\"\n          minHeight={100}\n          overflowY=\"auto\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderWidth={2}\n          p={5}\n          borderRadius=\"lg\"\n          borderColor=\"blue.600\"\n          borderStyle=\"dashed\"\n          css={{\n            '::-webkit-scrollbar': {\n              width: '0px' /* Remove scrollbar space */,\n            },\n          }}\n        >\n          <input {...getInputProps()} />\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Icon as={FaCloudUploadAlt} boxSize=\"3em\" color=\"blue.600\" mb={2} />\n\n            <Text\n              textAlign=\"center\"\n              color=\"blue.600\"\n              fontWeight=\"medium\"\n              textTransform=\"uppercase\"\n            >\n              Click or Drag &apos;n&apos; Drop Files\n            </Text>\n          </Flex>\n        </Box>\n      )}\n\n      {values[name]?.length > 0 && (\n        <Stack spacing={4} mt={2} mb={4}>\n          {values[name]?.map((file) => (\n            <Tag key={file.name} variant=\"outline\" colorScheme=\"blue\" size=\"lg\">\n              <TagLabel>\n                {file.name} - {filesize(file.size)}\n              </TagLabel>\n              <TagCloseButton\n                color=\"red.800\"\n                ml=\"auto\"\n                onClick={() => {\n                  const fila = values[name]?.filter(\n                    (f) => file.name !== f.name,\n                  );\n                  setFieldValue(name, fila);\n                }}\n              />\n            </Tag>\n          ))}\n\n          <Box>\n            <Button\n              leftIcon={<Icon as={FaCloudUploadAlt} />}\n              {...getRootProps()}\n              colorScheme=\"blue.700\"\n              variant=\"outline\"\n            >\n              <input {...getInputProps()} />\n              Add More Files\n            </Button>\n          </Box>\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport default UploadBox;\n"]},"metadata":{},"sourceType":"module"}