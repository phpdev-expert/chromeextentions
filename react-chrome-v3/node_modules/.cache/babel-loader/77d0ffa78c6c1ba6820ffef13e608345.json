{"ast":null,"code":"import _regeneratorRuntime from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{createContext,useContext,useMemo,useCallback}from'react';import{useQueryClient,useQuery}from'react-query';import{gql}from'graphql-request';import{request}from'../api/graphql_api';var AuthContext=createContext({});var UserInfoQuery=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation MyMutation {\\n    v1_iam_IAM_UserProfile {\\n      user {\\n        accountId\\n        companyInfoSet\\n        email\\n        createdAt\\n        emailVerified\\n        firstName\\n        lastName\\n        permissions\\n        resetOnLogin\\n        type\\n        updatedAt\\n        username\\n      }\\n    }\\n  }\\n\"])));export var AuthProvider=function AuthProvider(_ref){var _data$v1_iam_IAM_User,_data$v1_iam_IAM_User2,_data$v1_iam_IAM_User6;var children=_ref.children;var queryClient=useQueryClient();var _useQuery=useQuery('userinfo',function(){return request(UserInfoQuery);},{retry:false}),data=_useQuery.data,isLoading=_useQuery.isLoading,refetch=_useQuery.refetch,isFetching=_useQuery.isFetching;var loggedOut=!isLoading&&!(data===null||data===void 0?void 0:(_data$v1_iam_IAM_User=data.v1_iam_IAM_UserProfile)===null||_data$v1_iam_IAM_User===void 0?void 0:(_data$v1_iam_IAM_User2=_data$v1_iam_IAM_User.user)===null||_data$v1_iam_IAM_User2===void 0?void 0:_data$v1_iam_IAM_User2.username);var logout=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;// await LogoutUser();\n// if (!import.meta.env.MODE || import.meta.env.MODE === 'development') {\nlocalStorage.removeItem('access-token');// localStorage.removeItem('refresh-token');\n// }\nqueryClient.clear();// refetch();\nreturn _context.abrupt(\"return\",null);case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);})),[queryClient]);var loginRootMutation=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    mutation MyMutation(\\n      $email: String!\\n      $password: String!\\n      $accountid: String!\\n      $username: String!\\n    ) {\\n      v1_authn_Authn_Login(\\n        input: {\\n          email: $email\\n          password: $password\\n          accountid: $accountid\\n          username: $username\\n        }\\n      ) {\\n        authToken\\n        user {\\n          accountid\\n          companyInfoSet\\n          emailVerified\\n          firstName\\n          lastName\\n          type\\n          username\\n        }\\n      }\\n    }\\n  \"])));var login=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return request(loginRootMutation,{email:email,password:password,accountid:'abc',username:'abc'});case 3:res=_context2.sent;if(res.status===200){queryClient.invalidateQueries('userinfo');}return _context2.abrupt(\"return\",res);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);if(!_context2.t0.response){_context2.next=12;break;}throw _context2.t0;case 12:throw _context2.t0;case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}(),[loginRootMutation,queryClient]);var value=useMemo(function(){var _data$v1_iam_IAM_User3,_data$v1_iam_IAM_User4,_data$v1_iam_IAM_User5;return{isAuthenticated:!!(data===null||data===void 0?void 0:(_data$v1_iam_IAM_User3=data.v1_iam_IAM_UserProfile)===null||_data$v1_iam_IAM_User3===void 0?void 0:(_data$v1_iam_IAM_User4=_data$v1_iam_IAM_User3.user)===null||_data$v1_iam_IAM_User4===void 0?void 0:_data$v1_iam_IAM_User4.username),user:data===null||data===void 0?void 0:(_data$v1_iam_IAM_User5=data.v1_iam_IAM_UserProfile)===null||_data$v1_iam_IAM_User5===void 0?void 0:_data$v1_iam_IAM_User5.user,isFetching:isFetching,isLoading:isLoading,logout:logout,login:login,loggedOut:loggedOut,refetch:refetch,revalidate:function revalidate(){return queryClient.invalidateQueries('userinfo');}};},[loggedOut,login,logout,queryClient,data===null||data===void 0?void 0:(_data$v1_iam_IAM_User6=data.v1_iam_IAM_UserProfile)===null||_data$v1_iam_IAM_User6===void 0?void 0:_data$v1_iam_IAM_User6.user,isFetching,isLoading,refetch]);return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:value},children);};export var useAuth=function useAuth(){return useContext(AuthContext);};// revalidate: () => queryClient.invalidateQueries('userinfo'),","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/components/auth.jsx"],"names":["React","createContext","useContext","useMemo","useCallback","useQueryClient","useQuery","gql","request","AuthContext","UserInfoQuery","AuthProvider","children","queryClient","retry","data","isLoading","refetch","isFetching","loggedOut","v1_iam_IAM_UserProfile","user","username","logout","localStorage","removeItem","clear","loginRootMutation","login","email","password","accountid","res","status","invalidateQueries","response","value","isAuthenticated","revalidate","useAuth"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useMemo, useCallback } from 'react';\n\nimport { useQueryClient, useQuery } from 'react-query';\n\nimport { gql } from 'graphql-request';\nimport { request } from '../api/graphql_api';\n\nconst AuthContext = createContext({});\n\nconst UserInfoQuery = gql`\n  mutation MyMutation {\n    v1_iam_IAM_UserProfile {\n      user {\n        accountId\n        companyInfoSet\n        email\n        createdAt\n        emailVerified\n        firstName\n        lastName\n        permissions\n        resetOnLogin\n        type\n        updatedAt\n        username\n      }\n    }\n  }\n`;\n\nexport const AuthProvider = ({ children }) => {\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, refetch, isFetching } = useQuery(\n    'userinfo',\n    () => request(UserInfoQuery),\n    {\n      retry: false,\n    },\n  );\n\n\n\n  const loggedOut = !isLoading && !data?.v1_iam_IAM_UserProfile?.user?.username;\n\n  const logout = useCallback(async () => {\n    try {\n      // await LogoutUser();\n\n      // if (!import.meta.env.MODE || import.meta.env.MODE === 'development') {\n      localStorage.removeItem('access-token');\n      // localStorage.removeItem('refresh-token');\n      // }\n\n      queryClient.clear();\n      // refetch();\n\n      return null;\n    } catch (e) {\n      return e;\n    }\n  }, [queryClient]);\n\n  const loginRootMutation = gql`\n    mutation MyMutation(\n      $email: String!\n      $password: String!\n      $accountid: String!\n      $username: String!\n    ) {\n      v1_authn_Authn_Login(\n        input: {\n          email: $email\n          password: $password\n          accountid: $accountid\n          username: $username\n        }\n      ) {\n        authToken\n        user {\n          accountid\n          companyInfoSet\n          emailVerified\n          firstName\n          lastName\n          type\n          username\n        }\n      }\n    }\n  `;\n\n  const login = useCallback(\n    async (email, password) => {\n      try {\n        const res = await request(loginRootMutation, {\n          email,\n          password,\n          accountid: 'abc',\n          username: 'abc',\n        });\n\n        if (res.status === 200) {\n          queryClient.invalidateQueries('userinfo');\n        }\n\n        return res;\n      } catch (e) {\n        if (e.response) {\n          throw e;\n        }\n        throw e;\n      }\n    },\n    [loginRootMutation, queryClient],\n  );\n\n\n\n  const value = useMemo(\n    () => ({\n      isAuthenticated: !!data?.v1_iam_IAM_UserProfile?.user?.username,\n      user: data?.v1_iam_IAM_UserProfile?.user,\n      isFetching,\n      isLoading,\n      logout,\n      login,\n      loggedOut,\n      refetch,\n      revalidate: () => queryClient.invalidateQueries('userinfo'),\n    }),\n    [\n      loggedOut,\n      login,\n      logout,\n      queryClient,\n      data?.v1_iam_IAM_UserProfile?.user,\n      isFetching,\n      isLoading,\n      refetch,\n    ],\n  );\n\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\n// revalidate: () => queryClient.invalidateQueries('userinfo'),\n"]},"metadata":{},"sourceType":"module"}