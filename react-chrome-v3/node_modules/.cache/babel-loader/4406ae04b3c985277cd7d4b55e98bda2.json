{"ast":null,"code":"// 1. import `extendTheme` function\nimport { extendTheme } from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\nvar config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false\n}; // const accessibleColorMap = {\n//   yellow: {\n//     bg: 'yellow.400',\n//     color: 'black',\n//     hoverBg: 'yellow.500',\n//     activeBg: 'yellow.600',\n//   },\n//   cyan: {\n//     bg: 'cyan.400',\n//     color: 'black',\n//     hoverBg: 'cyan.500',\n//     activeBg: 'cyan.600',\n//   },\n// };\n// const variantdarkSolidDark = (props) => {\n//   const { colorScheme: c } = props;\n//   if (c === 'gray') {\n//     const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n//     return {\n//       bg,\n//       _hover: {\n//         bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n//         _disabled: {\n//           bg,\n//         },\n//       },\n//       _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n//     };\n//   }\n//   const {\n//     bg = `${c}.800`,\n//     color = 'white',\n//     hoverBg = `${c}.700`,\n//     activeBg = `${c}.700`,\n//   } = accessibleColorMap[c] ?? {};\n//   const background = mode(bg, `${c}.200`)(props);\n//   return {\n//     bg: background,\n//     color: mode(color, `gray.800`)(props),\n//     _hover: {\n//       bg: mode(hoverBg, `${c}.300`)(props),\n//       _disabled: {\n//         bg: background,\n//       },\n//     },\n//     _active: { bg: mode(activeBg, `${c}.400`)(props) },\n//   };\n// };\n\nvar theme = extendTheme({\n  // components: {\n  //   Button: {\n  //     variants: {\n  //       'solid-dark': variantdarkSolidDark,\n  //     },\n  //   },\n  // },\n  styles: {\n    global: {\n      'html, body': {\n        fontSize: '16px'\n      }\n    }\n  },\n  colors: {\n    darkpurple: {\n      50: '#efedfc',\n      100: '#cfcbe7',\n      200: '#afa8d4',\n      300: '#8f85c3',\n      400: '#7064b2',\n      500: '#574a98',\n      600: '#443a77',\n      700: '#302955',\n      800: '#1d1834',\n      900: '#0b0715'\n    }\n  },\n  // fonts: {\n  //   body: 'Roboto',\n  //   heading: 'Ubuntu',\n  // },\n  config: config\n});\nexport default theme;","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/theme/theme.js"],"names":["extendTheme","mode","config","initialColorMode","useSystemColorMode","theme","styles","global","fontSize","colors","darkpurple"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,gBAAgB,EAAE,OADL;AAEbC,EAAAA,kBAAkB,EAAE;AAFP,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAGL,WAAW,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AACN,oBAAc;AACZC,QAAAA,QAAQ,EAAE;AADE;AADR;AADF,GARgB;AAexBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE;AACV,UAAI,SADM;AAEV,WAAK,SAFK;AAGV,WAAK,SAHK;AAIV,WAAK,SAJK;AAKV,WAAK,SALK;AAMV,WAAK,SANK;AAOV,WAAK,SAPK;AAQV,WAAK,SARK;AASV,WAAK,SATK;AAUV,WAAK;AAVK;AADN,GAfgB;AA6BxB;AACA;AACA;AACA;AACAR,EAAAA,MAAM,EAANA;AAjCwB,CAAD,CAAzB;AAoCA,eAAeG,KAAf","sourcesContent":["// 1. import `extendTheme` function\nimport { extendTheme } from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\n// const accessibleColorMap = {\n//   yellow: {\n//     bg: 'yellow.400',\n//     color: 'black',\n//     hoverBg: 'yellow.500',\n//     activeBg: 'yellow.600',\n//   },\n//   cyan: {\n//     bg: 'cyan.400',\n//     color: 'black',\n//     hoverBg: 'cyan.500',\n//     activeBg: 'cyan.600',\n//   },\n// };\n\n// const variantdarkSolidDark = (props) => {\n//   const { colorScheme: c } = props;\n\n//   if (c === 'gray') {\n//     const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n//     return {\n//       bg,\n//       _hover: {\n//         bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n//         _disabled: {\n//           bg,\n//         },\n//       },\n//       _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n//     };\n//   }\n\n//   const {\n//     bg = `${c}.800`,\n//     color = 'white',\n//     hoverBg = `${c}.700`,\n//     activeBg = `${c}.700`,\n//   } = accessibleColorMap[c] ?? {};\n\n//   const background = mode(bg, `${c}.200`)(props);\n\n//   return {\n//     bg: background,\n//     color: mode(color, `gray.800`)(props),\n//     _hover: {\n//       bg: mode(hoverBg, `${c}.300`)(props),\n//       _disabled: {\n//         bg: background,\n//       },\n//     },\n//     _active: { bg: mode(activeBg, `${c}.400`)(props) },\n//   };\n// };\n\nconst theme = extendTheme({\n  // components: {\n  //   Button: {\n  //     variants: {\n  //       'solid-dark': variantdarkSolidDark,\n  //     },\n  //   },\n  // },\n  styles: {\n    global: {\n      'html, body': {\n        fontSize: '16px',\n      },\n    },\n  },\n  colors: {\n    darkpurple: {\n      50: '#efedfc',\n      100: '#cfcbe7',\n      200: '#afa8d4',\n      300: '#8f85c3',\n      400: '#7064b2',\n      500: '#574a98',\n      600: '#443a77',\n      700: '#302955',\n      800: '#1d1834',\n      900: '#0b0715',\n    },\n  },\n  // fonts: {\n  //   body: 'Roboto',\n  //   heading: 'Ubuntu',\n  // },\n  config,\n});\n\nexport default theme;\n"]},"metadata":{},"sourceType":"module"}