{"ast":null,"code":"import _regeneratorRuntime from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _templateObject2,\n    _jsxFileName = \"/home/dh/Desktop/react-chrome-secureshare/src/components/auth.jsx\";\n\nimport React, { createContext, useContext, useMemo, useCallback } from 'react';\nimport { useQueryClient, useQuery } from 'react-query';\nimport { gql } from 'graphql-request';\nimport { request } from '../api/graphql_api';\nvar AuthContext = createContext({});\nvar UserInfoQuery = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation MyMutation {\\n    v1_iam_IAM_UserProfile {\\n      user {\\n        accountId\\n        companyInfoSet\\n        email\\n        createdAt\\n        emailVerified\\n        firstName\\n        lastName\\n        permissions\\n        resetOnLogin\\n        type\\n        updatedAt\\n        username\\n      }\\n    }\\n  }\\n\"])));\nexport var AuthProvider = function AuthProvider(_ref) {\n  var _data$iam_IAM_UserPro, _data$iam_IAM_UserPro2, _data$iam_IAM_UserPro6;\n\n  var children = _ref.children;\n  var queryClient = useQueryClient();\n\n  var _useQuery = useQuery('userinfo', function () {\n    return request(UserInfoQuery);\n  }, {\n    retry: false\n  }),\n      data = _useQuery.data,\n      isLoading = _useQuery.isLoading,\n      refetch = _useQuery.refetch,\n      isFetching = _useQuery.isFetching;\n\n  var loggedOut = !isLoading && !(data === null || data === void 0 ? void 0 : (_data$iam_IAM_UserPro = data.iam_IAM_UserProfile) === null || _data$iam_IAM_UserPro === void 0 ? void 0 : (_data$iam_IAM_UserPro2 = _data$iam_IAM_UserPro.user) === null || _data$iam_IAM_UserPro2 === void 0 ? void 0 : _data$iam_IAM_UserPro2.username);\n  var logout = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // await LogoutUser();\n            // if (!import.meta.env.MODE || import.meta.env.MODE === 'development') {\n            localStorage.removeItem('access-token'); // localStorage.removeItem('refresh-token');\n            // }\n\n            queryClient.clear(); // refetch();\n\n            return _context.abrupt(\"return\", null);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  })), [queryClient]);\n  var loginRootMutation = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    mutation MyMutation(\\n      $email: String!\\n      $password: String!\\n      $accountid: String!\\n      $username: String!\\n    ) {\\n      v1_authn_Authn_Login(\\n        input: {\\n          email: $email\\n          password: $password\\n          accountid: $accountid\\n          username: $username\\n        }\\n      ) {\\n        authToken\\n        user {\\n          accountid\\n          companyInfoSet\\n          emailVerified\\n          firstName\\n          lastName\\n          type\\n          username\\n        }\\n      }\\n    }\\n  \"])));\n  var login = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return request(loginRootMutation, {\n                email: email,\n                password: password,\n                accountid: 'abc',\n                username: 'abc'\n              });\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                queryClient.invalidateQueries('userinfo');\n              }\n\n              return _context2.abrupt(\"return\", res);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n\n              if (!_context2.t0.response) {\n                _context2.next = 12;\n                break;\n              }\n\n              throw _context2.t0;\n\n            case 12:\n              throw _context2.t0;\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [loginRootMutation, queryClient]); // const login = async (email, pass) => {\n  //   try {\n  //     const res = await LoginUser(email, pass);\n  //     if (res.status === 200) {\n  //       queryClient.invalidateQueries('userinfo');\n  //     }\n  //     return res;\n  //   } catch (e) {\n  //   }\n  // };\n\n  var value = useMemo(function () {\n    var _data$iam_IAM_UserPro3, _data$iam_IAM_UserPro4, _data$iam_IAM_UserPro5;\n\n    return {\n      isAuthenticated: !!(data === null || data === void 0 ? void 0 : (_data$iam_IAM_UserPro3 = data.iam_IAM_UserProfile) === null || _data$iam_IAM_UserPro3 === void 0 ? void 0 : (_data$iam_IAM_UserPro4 = _data$iam_IAM_UserPro3.user) === null || _data$iam_IAM_UserPro4 === void 0 ? void 0 : _data$iam_IAM_UserPro4.username),\n      user: data === null || data === void 0 ? void 0 : (_data$iam_IAM_UserPro5 = data.iam_IAM_UserProfile) === null || _data$iam_IAM_UserPro5 === void 0 ? void 0 : _data$iam_IAM_UserPro5.user,\n      isFetching: isFetching,\n      isLoading: isLoading,\n      logout: logout,\n      login: login,\n      loggedOut: loggedOut,\n      refetch: refetch,\n      revalidate: function revalidate() {\n        return queryClient.invalidateQueries('userinfo');\n      }\n    };\n  }, [loggedOut, login, logout, queryClient, data === null || data === void 0 ? void 0 : (_data$iam_IAM_UserPro6 = data.iam_IAM_UserProfile) === null || _data$iam_IAM_UserPro6 === void 0 ? void 0 : _data$iam_IAM_UserPro6.user, isFetching, isLoading, refetch]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 10\n    }\n  }, children);\n};\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n}; // revalidate: () => queryClient.invalidateQueries('userinfo'),","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/components/auth.jsx"],"names":["React","createContext","useContext","useMemo","useCallback","useQueryClient","useQuery","gql","request","AuthContext","UserInfoQuery","AuthProvider","children","queryClient","retry","data","isLoading","refetch","isFetching","loggedOut","iam_IAM_UserProfile","user","username","logout","localStorage","removeItem","clear","loginRootMutation","login","email","password","accountid","res","status","invalidateQueries","response","value","isAuthenticated","revalidate","useAuth"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useMemo, useCallback } from 'react';\n\nimport { useQueryClient, useQuery } from 'react-query';\n\nimport { gql } from 'graphql-request';\nimport { request } from '../api/graphql_api';\n\nconst AuthContext = createContext({});\n\nconst UserInfoQuery = gql`\n  mutation MyMutation {\n    v1_iam_IAM_UserProfile {\n      user {\n        accountId\n        companyInfoSet\n        email\n        createdAt\n        emailVerified\n        firstName\n        lastName\n        permissions\n        resetOnLogin\n        type\n        updatedAt\n        username\n      }\n    }\n  }\n`;\n\nexport const AuthProvider = ({ children }) => {\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, refetch, isFetching } = useQuery(\n    'userinfo',\n    () => request(UserInfoQuery),\n    {\n      retry: false,\n    },\n  );\n\n\n\n  const loggedOut = !isLoading && !data?.iam_IAM_UserProfile?.user?.username;\n\n  const logout = useCallback(async () => {\n    try {\n      // await LogoutUser();\n\n      // if (!import.meta.env.MODE || import.meta.env.MODE === 'development') {\n      localStorage.removeItem('access-token');\n      // localStorage.removeItem('refresh-token');\n      // }\n\n      queryClient.clear();\n      // refetch();\n\n      return null;\n    } catch (e) {\n      return e;\n    }\n  }, [queryClient]);\n\n  const loginRootMutation = gql`\n    mutation MyMutation(\n      $email: String!\n      $password: String!\n      $accountid: String!\n      $username: String!\n    ) {\n      v1_authn_Authn_Login(\n        input: {\n          email: $email\n          password: $password\n          accountid: $accountid\n          username: $username\n        }\n      ) {\n        authToken\n        user {\n          accountid\n          companyInfoSet\n          emailVerified\n          firstName\n          lastName\n          type\n          username\n        }\n      }\n    }\n  `;\n\n  const login = useCallback(\n    async (email, password) => {\n      try {\n        const res = await request(loginRootMutation, {\n          email,\n          password,\n          accountid: 'abc',\n          username: 'abc',\n        });\n\n        if (res.status === 200) {\n          queryClient.invalidateQueries('userinfo');\n        }\n\n        return res;\n      } catch (e) {\n        if (e.response) {\n          throw e;\n        }\n        throw e;\n      }\n    },\n    [loginRootMutation, queryClient],\n  );\n\n  // const login = async (email, pass) => {\n  //   try {\n  //     const res = await LoginUser(email, pass);\n  //     if (res.status === 200) {\n  //       queryClient.invalidateQueries('userinfo');\n  //     }\n\n  //     return res;\n  //   } catch (e) {\n\n  //   }\n  // };\n\n  const value = useMemo(\n    () => ({\n      isAuthenticated: !!data?.iam_IAM_UserProfile?.user?.username,\n      user: data?.iam_IAM_UserProfile?.user,\n      isFetching,\n      isLoading,\n      logout,\n      login,\n      loggedOut,\n      refetch,\n      revalidate: () => queryClient.invalidateQueries('userinfo'),\n    }),\n    [\n      loggedOut,\n      login,\n      logout,\n      queryClient,\n      data?.iam_IAM_UserProfile?.user,\n      isFetching,\n      isLoading,\n      refetch,\n    ],\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\n// revalidate: () => queryClient.invalidateQueries('userinfo'),\n"]},"metadata":{},"sourceType":"module"}