{"ast":null,"code":"import _regeneratorRuntime from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/dh/Desktop/react-chrome-secureshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useCallback}from'react';import{useDropzone}from'react-dropzone';import{FaCloudUploadAlt}from'react-icons/fa';import{Box,Flex,Text,Button,Stack,TagCloseButton,Tag,TagLabel,Icon}from'@chakra-ui/react';import filesize from'filesize';import{Encrypt}from'../utils/filecrypt';var UploadBox=function UploadBox(_ref){var _values$name,_values$name2,_values$name3;var setFieldValue=_ref.setFieldValue,values=_ref.values,name=_ref.name,_ref$encryptionKey=_ref.encryptionKey,encryptionKey=_ref$encryptionKey===void 0?'hello':_ref$encryptionKey;var _useDropzone=useDropzone({onDrop:useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(acceptedFs){var fila,_iterator,_step,e,enBlob,file;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fila=_toConsumableArray(values[name]);// acceptedFs.forEach((e) => {\n//   fila = fila.filter((f) => e.name !== f.name);\n// });\n// acceptedFs.forEach((e) => {\n//   fila = fila.filter((f) => e.name !== f.name);\n// });\n_iterator=_createForOfIteratorHelper(acceptedFs);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=15;break;}e=_step.value;console.log('accepted files');console.log(e);_context.next=10;return Encrypt(encryptionKey,e);case 10:enBlob=_context.sent;file=new File([enBlob],e.name,{type:enBlob.type});fila=[].concat(_toConsumableArray(fila),[file]);case 13:_context.next=4;break;case 15:_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 20:_context.prev=20;_iterator.f();return _context.finish(20);case 23:// console.log('accepted', acceptedFs);\n// console.log('fila', fila);\nsetFieldValue('files',fila);case 24:case\"end\":return _context.stop();}}},_callee,null,[[2,17,20,23]]);}));return function(_x){return _ref2.apply(this,arguments);};}(),[name,setFieldValue,values,encryptionKey])}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps;return/*#__PURE__*/React.createElement(React.Fragment,null,((_values$name=values[name])===null||_values$name===void 0?void 0:_values$name.length)===0&&/*#__PURE__*/React.createElement(Box,Object.assign({},getRootProps(),{mb:4,cursor:\"pointer\",display:\"flex\",minHeight:100,overflowY:\"auto\",alignItems:\"center\",justifyContent:\"center\",borderWidth:2,p:5,borderRadius:\"lg\",borderColor:\"blue.600\",borderStyle:\"dashed\",css:{'::-webkit-scrollbar':{width:'0px'/* Remove scrollbar space */}}}),/*#__PURE__*/React.createElement(\"input\",getInputProps()),/*#__PURE__*/React.createElement(Flex,{flexDirection:\"column\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Icon,{as:FaCloudUploadAlt,boxSize:\"3em\",color:\"blue.600\",mb:2}),/*#__PURE__*/React.createElement(Text,{textAlign:\"center\",color:\"blue.600\",fontWeight:\"medium\",textTransform:\"uppercase\"},\"Click or Drag 'n' Drop Files\"))),((_values$name2=values[name])===null||_values$name2===void 0?void 0:_values$name2.length)>0&&/*#__PURE__*/React.createElement(Stack,{spacing:4,mt:2,mb:4},(_values$name3=values[name])===null||_values$name3===void 0?void 0:_values$name3.map(function(file){return/*#__PURE__*/React.createElement(Tag,{key:file.name,variant:\"outline\",colorScheme:\"blue\",size:\"lg\"},/*#__PURE__*/React.createElement(TagLabel,null,file.name,\" - \",filesize(file.size)),/*#__PURE__*/React.createElement(TagCloseButton,{color:\"red.800\",ml:\"auto\",onClick:function onClick(){var _values$name4;var fila=(_values$name4=values[name])===null||_values$name4===void 0?void 0:_values$name4.filter(function(f){return file.name!==f.name;});setFieldValue(name,fila);}}));}),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Button,Object.assign({leftIcon:/*#__PURE__*/React.createElement(Icon,{as:FaCloudUploadAlt})},getRootProps(),{colorScheme:\"blue.700\",variant:\"outline\"}),/*#__PURE__*/React.createElement(\"input\",getInputProps()),\"Add More Files\"))));};export default UploadBox;","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/components/UploadBox.jsx"],"names":["React","useCallback","useDropzone","FaCloudUploadAlt","Box","Flex","Text","Button","Stack","TagCloseButton","Tag","TagLabel","Icon","filesize","Encrypt","UploadBox","setFieldValue","values","name","encryptionKey","onDrop","acceptedFs","fila","e","console","log","enBlob","file","File","type","getRootProps","getInputProps","length","width","map","size","filter","f"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Stack,\n  TagCloseButton,\n  Tag,\n  TagLabel,\n  Icon,\n} from '@chakra-ui/react';\nimport filesize from 'filesize';\n\nimport { Encrypt } from '../utils/filecrypt';\n\nconst UploadBox = ({\n  setFieldValue,\n  values,\n  name,\n  encryptionKey = 'hello',\n}) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: useCallback(\n      async (acceptedFs) => {\n        let fila = [...values[name]];\n\n        // acceptedFs.forEach((e) => {\n        //   fila = fila.filter((f) => e.name !== f.name);\n        // });\n\n        for (const e of acceptedFs) {\n          console.log('accepted files');\n          console.log(e);\n          const enBlob = await Encrypt(encryptionKey, e);\n          const file = new File([enBlob], e.name, {\n            type: enBlob.type,\n          });\n\n          fila = [...fila, ...[file]];\n        }\n\n        // console.log('accepted', acceptedFs);\n\n        // console.log('fila', fila);\n        setFieldValue('files', fila);\n      },\n      [name, setFieldValue, values, encryptionKey],\n    ),\n  });\n\n  return (\n    <>\n      {values[name]?.length === 0 && (\n        <Box\n          {...getRootProps()}\n          mb={4}\n          cursor=\"pointer\"\n          display=\"flex\"\n          minHeight={100}\n          overflowY=\"auto\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderWidth={2}\n          p={5}\n          borderRadius=\"lg\"\n          borderColor=\"blue.600\"\n          borderStyle=\"dashed\"\n          css={{\n            '::-webkit-scrollbar': {\n              width: '0px' /* Remove scrollbar space */,\n            },\n          }}\n        >\n          <input {...getInputProps()} />\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Icon as={FaCloudUploadAlt} boxSize=\"3em\" color=\"blue.600\" mb={2} />\n\n            <Text\n              textAlign=\"center\"\n              color=\"blue.600\"\n              fontWeight=\"medium\"\n              textTransform=\"uppercase\"\n            >\n              Click or Drag &apos;n&apos; Drop Files\n            </Text>\n          </Flex>\n        </Box>\n      )}\n\n      {values[name]?.length > 0 && (\n        <Stack spacing={4} mt={2} mb={4}>\n          {values[name]?.map((file) => (\n            <Tag key={file.name} variant=\"outline\" colorScheme=\"blue\" size=\"lg\">\n              <TagLabel>\n                {file.name} - {filesize(file.size)}\n              </TagLabel>\n              <TagCloseButton\n                color=\"red.800\"\n                ml=\"auto\"\n                onClick={() => {\n                  const fila = values[name]?.filter(\n                    (f) => file.name !== f.name,\n                  );\n                  setFieldValue(name, fila);\n                }}\n              />\n            </Tag>\n          ))}\n\n          <Box>\n            <Button\n              leftIcon={<Icon as={FaCloudUploadAlt} />}\n              {...getRootProps()}\n              colorScheme=\"blue.700\"\n              variant=\"outline\"\n            >\n              <input {...getInputProps()} />\n              Add More Files\n            </Button>\n          </Box>\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport default UploadBox;\n"]},"metadata":{},"sourceType":"module"}