{"ast":null,"code":"import React,{Component}from'react';import{Flex,Button,useClipboard,Editable,EditablePreview,EditableInput,Input}from'@chakra-ui/react';var ClipInput=function ClipInput(_ref){var value=_ref.value;var _useClipboard=useClipboard(value),hasCopied=_useClipboard.hasCopied,onCopy=_useClipboard.onCopy;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Flex,{mb:2},/*#__PURE__*/React.createElement(Input,{value:value,isReadOnly:true,placeholder:\"Welcome\"}),/*#__PURE__*/React.createElement(Button,{onClick:onCopy,ml:2},hasCopied?'Copied':'Copy')),/*#__PURE__*/React.createElement(Editable,{isReadOnly:true},/*#__PURE__*/React.createElement(EditablePreview,{width:\"100%\"}),/*#__PURE__*/React.createElement(EditableInput,null)));};export default ClipInput;","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/components/ClipInput.jsx"],"names":["React","Component","Flex","Button","useClipboard","Editable","EditablePreview","EditableInput","Input","ClipInput","value","hasCopied","onCopy"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAkC,OAAlC,CACA,OACEC,IADF,CAEEC,MAFF,CAGEC,YAHF,CAIEC,QAJF,CAKEC,eALF,CAMEC,aANF,CAOEC,KAPF,KAQO,kBARP,CAUA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC/B,kBAA8BN,YAAY,CAACM,KAAD,CAA1C,CAAQC,SAAR,eAAQA,SAAR,CAAmBC,MAAnB,eAAmBA,MAAnB,CAEA,mBACE,qDACE,oBAAC,IAAD,EAAM,EAAE,CAAE,CAAV,eACE,oBAAC,KAAD,EAAO,KAAK,CAAEF,KAAd,CAAqB,UAAU,KAA/B,CAAgC,WAAW,CAAC,SAA5C,EADF,cAEE,oBAAC,MAAD,EAAQ,OAAO,CAAEE,MAAjB,CAAyB,EAAE,CAAE,CAA7B,EACGD,SAAS,CAAG,QAAH,CAAc,MAD1B,CAFF,CADF,cAOE,oBAAC,QAAD,EAAU,UAAU,KAApB,eACE,oBAAC,eAAD,EAAiB,KAAK,CAAC,MAAvB,EADF,cAEE,oBAAC,aAAD,MAFF,CAPF,CADF,CAcD,CAjBD,CAmBA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { Component }  from 'react';\nimport {\n  Flex,\n  Button,\n  useClipboard,\n  Editable,\n  EditablePreview,\n  EditableInput,\n  Input,\n} from '@chakra-ui/react';\n\nconst ClipInput = ({ value }) => {\n  const { hasCopied, onCopy } = useClipboard(value);\n\n  return (\n    <>\n      <Flex mb={2}>\n        <Input value={value} isReadOnly placeholder=\"Welcome\" />\n        <Button onClick={onCopy} ml={2}>\n          {hasCopied ? 'Copied' : 'Copy'}\n        </Button>\n      </Flex>\n      <Editable isReadOnly>\n        <EditablePreview width=\"100%\" />\n        <EditableInput />\n      </Editable>\n    </>\n  );\n};\n\nexport default ClipInput;\n"]},"metadata":{},"sourceType":"module"}