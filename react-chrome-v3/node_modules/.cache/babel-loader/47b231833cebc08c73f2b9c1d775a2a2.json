{"ast":null,"code":"// 1. import `extendTheme` function\nimport{extendTheme}from'@chakra-ui/react';import{mode}from'@chakra-ui/theme-tools';var config={initialColorMode:'light',useSystemColorMode:false};// const accessibleColorMap = {\n//   yellow: {\n//     bg: 'yellow.400',\n//     color: 'black',\n//     hoverBg: 'yellow.500',\n//     activeBg: 'yellow.600',\n//   },\n//   cyan: {\n//     bg: 'cyan.400',\n//     color: 'black',\n//     hoverBg: 'cyan.500',\n//     activeBg: 'cyan.600',\n//   },\n// };\n// const variantdarkSolidDark = (props) => {\n//   const { colorScheme: c } = props;\n//   if (c === 'gray') {\n//     const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n//     return {\n//       bg,\n//       _hover: {\n//         bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n//         _disabled: {\n//           bg,\n//         },\n//       },\n//       _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n//     };\n//   }\n//   const {\n//     bg = `${c}.800`,\n//     color = 'white',\n//     hoverBg = `${c}.700`,\n//     activeBg = `${c}.700`,\n//   } = accessibleColorMap[c] ?? {};\n//   const background = mode(bg, `${c}.200`)(props);\n//   return {\n//     bg: background,\n//     color: mode(color, `gray.800`)(props),\n//     _hover: {\n//       bg: mode(hoverBg, `${c}.300`)(props),\n//       _disabled: {\n//         bg: background,\n//       },\n//     },\n//     _active: { bg: mode(activeBg, `${c}.400`)(props) },\n//   };\n// };\nvar theme=extendTheme({// components: {\n//   Button: {\n//     variants: {\n//       'solid-dark': variantdarkSolidDark,\n//     },\n//   },\n// },\nstyles:{global:{'html, body':{fontSize:'16px'}}},colors:{darkpurple:{50:'#efedfc',100:'#cfcbe7',200:'#afa8d4',300:'#8f85c3',400:'#7064b2',500:'#574a98',600:'#443a77',700:'#302955',800:'#1d1834',900:'#0b0715'}},// fonts: {\n//   body: 'Roboto',\n//   heading: 'Ubuntu',\n// },\nconfig:config});export default theme;","map":{"version":3,"sources":["/home/dh/Desktop/react-chrome-secureshare/src/theme/theme.js"],"names":["extendTheme","mode","config","initialColorMode","useSystemColorMode","theme","styles","global","fontSize","colors","darkpurple"],"mappings":"AAAA;AACA,OAASA,WAAT,KAA4B,kBAA5B,CACA,OAASC,IAAT,KAAqB,wBAArB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,gBAAgB,CAAE,OADL,CAEbC,kBAAkB,CAAE,KAFP,CAAf,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAAC,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,MAAM,CAAE,CACNC,MAAM,CAAE,CACN,aAAc,CACZC,QAAQ,CAAE,MADE,CADR,CADF,CARgB,CAexBC,MAAM,CAAE,CACNC,UAAU,CAAE,CACV,GAAI,SADM,CAEV,IAAK,SAFK,CAGV,IAAK,SAHK,CAIV,IAAK,SAJK,CAKV,IAAK,SALK,CAMV,IAAK,SANK,CAOV,IAAK,SAPK,CAQV,IAAK,SARK,CASV,IAAK,SATK,CAUV,IAAK,SAVK,CADN,CAfgB,CA6BxB;AACA;AACA;AACA;AACAR,MAAM,CAANA,MAjCwB,CAAD,CAAzB,CAoCA,cAAeG,CAAAA,KAAf","sourcesContent":["// 1. import `extendTheme` function\nimport { extendTheme } from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\n// const accessibleColorMap = {\n//   yellow: {\n//     bg: 'yellow.400',\n//     color: 'black',\n//     hoverBg: 'yellow.500',\n//     activeBg: 'yellow.600',\n//   },\n//   cyan: {\n//     bg: 'cyan.400',\n//     color: 'black',\n//     hoverBg: 'cyan.500',\n//     activeBg: 'cyan.600',\n//   },\n// };\n\n// const variantdarkSolidDark = (props) => {\n//   const { colorScheme: c } = props;\n\n//   if (c === 'gray') {\n//     const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n//     return {\n//       bg,\n//       _hover: {\n//         bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n//         _disabled: {\n//           bg,\n//         },\n//       },\n//       _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n//     };\n//   }\n\n//   const {\n//     bg = `${c}.800`,\n//     color = 'white',\n//     hoverBg = `${c}.700`,\n//     activeBg = `${c}.700`,\n//   } = accessibleColorMap[c] ?? {};\n\n//   const background = mode(bg, `${c}.200`)(props);\n\n//   return {\n//     bg: background,\n//     color: mode(color, `gray.800`)(props),\n//     _hover: {\n//       bg: mode(hoverBg, `${c}.300`)(props),\n//       _disabled: {\n//         bg: background,\n//       },\n//     },\n//     _active: { bg: mode(activeBg, `${c}.400`)(props) },\n//   };\n// };\n\nconst theme = extendTheme({\n  // components: {\n  //   Button: {\n  //     variants: {\n  //       'solid-dark': variantdarkSolidDark,\n  //     },\n  //   },\n  // },\n  styles: {\n    global: {\n      'html, body': {\n        fontSize: '16px',\n      },\n    },\n  },\n  colors: {\n    darkpurple: {\n      50: '#efedfc',\n      100: '#cfcbe7',\n      200: '#afa8d4',\n      300: '#8f85c3',\n      400: '#7064b2',\n      500: '#574a98',\n      600: '#443a77',\n      700: '#302955',\n      800: '#1d1834',\n      900: '#0b0715',\n    },\n  },\n  // fonts: {\n  //   body: 'Roboto',\n  //   heading: 'Ubuntu',\n  // },\n  config,\n});\n\nexport default theme;\n"]},"metadata":{},"sourceType":"module"}